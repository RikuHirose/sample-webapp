<template>
    <div class="c-file-upload-box">
        <div
            class="c-file-upload-box__input"
            @click="selectFiles()"
        >
            <p>クリックしてファイルを選択する</p>
            <file-upload
                :input-id="inputId"
                post-action="/api/uploadChunk"
                :chunk-enabled="true"
                  :chunk="{
                    action: '/api/uploadChunk',
                    minSize: chunkMinSize * 1048576,
                    maxActive: chunkMaxActive,
                    maxRetries: chunkMaxRetries
                  }"
                @input-filter="inputFilter"
                @input-file="inputFile"
                 ref="upload"
            >
            </file-upload>
        </div>
    </div>
</template>
<script>
import FileUpload from 'vue-upload-component'
export default {
    components: {
        FileUpload,
    },
    props: {
    },
    data() {
        return {
            // files: [],
            inputId: 'chunk',
            chunkMinSize: 1,
            chunkMaxActive: 3,
            chunkMaxRetries: 5
        }
    },
    created() {},

    methods: {
        selectFiles() {
            const input = document.querySelector(`#${this.inputId}`)
            input.click()
        },
        // async inputFilter(newFile, oldFile, prevent) {
        //     if (newFile && !oldFile) {

        //         // newFile.blob = ''
        //         // let URL = window.URL || window.webkitURL
        //         // if (URL && URL.createObjectURL) {
        //         //     newFile.blob = URL.createObjectURL(newFile.file)
        //         // }
        //         // newFile.fileId = await this.uploadImage(newFile)

        //         // if (this.uploadableFileNumber !== 0) {
        //         //     this.uploadableFileNumber = this.uploadableFileNumber - 1
        //         // }
        //     }
        // },

        // async uploadImage(file) {
        //     let formData = new FormData()
        //     formData.append('file', file.file)
        //     formData.append('artist_id', this.artistId)
        //     try {
        //         let file = await api.postFilePhoto(formData)
        //         return file.id
        //     } catch (error) {
        //         // console.log(error)
        //     }
        // },
        inputFilter(newFile, oldFile, prevent) {
              if (newFile && !oldFile) {
                // Before adding a file
                // 添加文件前
                // Filter system files or hide files
                // 过滤系统文件 和隐藏文件
                if (/(\/|^)(Thumbs\.db|desktop\.ini|\..+)$/.test(newFile.name)) {
                  return prevent()
                }
                // Filter php html js file
                // 过滤 php html js 文件
                if (/\.(php5?|html?|jsx?)$/i.test(newFile.name)) {
                  return prevent()
                }
              }
        },
        inputFile(newFile, oldFile) {
              if (newFile && !oldFile) {
                // add
                console.log('add', newFile)
                this.$refs.upload.active = true
              }
              if (newFile && oldFile) {
                // update
                console.log('update', newFile)
              }
              if (!newFile && oldFile) {
                // remove
                console.log('remove', oldFile)
              }
            }
        },
}
</script>
<style lang="scss" scoped>
.c-file-upload-box {
    .file-thumbnail__border {
        border: 3px solid skyblue;
    }

    .file-thumbnail__btn {
        a {
            font-size: 8px;
            font-weight: 600;
        }
        background: #f5f5f5;
        padding: 8px;
    }

    .remove {
        position: relative;
        background-color: #f5f4f2;
        &__btn {
            position: absolute;
            top: 0;
            left: 0;
            margin: 0;
            color: white;
            background-color: rgba(51, 64, 57, 0.77);
            padding: 5px 10px;
            min-width: 32px;
            min-height: 32px;
        }
    }

    text-align: center;

    &__uploaded {
        position: relative;
        width: 100%;

        img {
            max-height: 200px;
        }

        .remove__btn {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            color: white;
            background-color: rgba(51, 64, 57, 0.77);
            padding: 5px 10px;
            min-width: 32px;
            min-height: 32px;
        }
    }
    &__uploaded-files {
        ul {
            text-align: left;
        }

        li {
            position: relative;
            list-style-type: none;
            background-color: rgb(245, 244, 242);
            -webkit-box-flex: 1;
            flex-grow: 1;
            overflow: hidden;
            margin: 0.5rem;
            border-width: 1px;
            border-style: solid;
            border-color: rgb(229, 227, 221);
            border-image: initial;
            border-radius: 4px;
            width: 23%;
            display: inline-block;
            text-align: center;

            .remove__btn {
                position: absolute;
                top: 0;
                left: 0;
                margin: 0;
                color: white;
                background-color: rgba(51, 64, 57, 2.77);
                padding: 5px 10px;
                min-width: 32px;
                min-height: 32px;
            }
        }

        &__blob {
            object-fit: cover;
            max-height: 200px;
        }

        .file-remove__btn {
            font-size: 14px;
            background: #f5f5f5;
        }

        .no-image-file {
            width: 114px;
            height: 114px;
            color: white;
            background-color: rgba(33, 150, 243, 0.8);
            padding: 8px;

            .file-name {
                overflow: hidden;
                text-overflow: ellipsis;
                font-size: 8px;
                max-height: 72px;
            }
        }
    }
    &__input {
        width: 100%;
        position: relative;
        min-height: 124px;
        background: #f5f5f5;
        border: 1px dashed #ccc;
        text-align: center;
        padding: 40px;
        font-size: 14px;
        line-height: 1.5;

        &:hover {
            opacity: 0.8;
        }
    }
}

@media screen and (max-width: 640px) {
    .c-file-upload-box {
        display: block;
        margin-top: 16px;

        &__uploaded-files {
            ul {
                display: flex;
                flex-wrap: wrap;
                li {
                    margin: 8px 8px 0 0;
                }
            }
        }

        &__input {
            margin-top: 8px;
        }
    }
}
</style>
